# download the redis dump from s3
# create the json files for the redis data
# upload the json files to github artifacts

name: frontend-bundles

on:
  push:
    branches:
      - github_build

jobs:
  bundle_frontend:
    timeout-minutes: 30
    runs-on: ubuntu-latest

    steps:

      # https://github.com/actions/toolkit/issues/946#issuecomment-1590016041
      - name: root suid tar
        run: sudo chown root:root /bin/tar && sudo chmod u+s /bin/tar

      - uses: actions/checkout@v3

      - name: Cache Redis Dump
        id: cache-redis
        uses: actions/cache@v3
        env:
          cache-name: cache-redis
        with:
          path: ./.redis/
          key: cache-redis

      # download redis db dump from s3
      - if: ${{ steps.cache-redis.cache-hit != 'true' }}
        name: Download the Redis Dump
        # continue-on-error: true
        uses: keithweaver/aws-s3-github-action@v1.0.0
        with:
          command: cp
          source: s3://${{ vars.BUILD_S3_BUCKET }}/dump.rdb
          destination: ./.redis/dump.rdb
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ap-southeast-2

      # start redis & check if it is running
      - name: Start Redis
        working-directory: ./crawler
        run: docker-compose -f "docker-compose.github.yaml" up -d redis
      - working-directory: ./crawler
        run: docker ps -a
      - working-directory: ./crawler
        run: docker-compose -f "docker-compose.github.yaml" logs redis

      - name: Use Node.js 18.15.0
        uses: actions/setup-node@v3
        with:
          node-version: 18.15.0
          
      - name: Install Dependencies
        run: npm ci
        working-directory: ./crawler

      - name: Run Output Script
        run: node index.js --out
        working-directory: ./crawler

      # store the json files as artifacts
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-json-bundle
          path: |
            ./frontend/public/data/

      # stop redis
      - name: Stop Redis
        working-directory: ./crawler
        if: always()
        run: docker-compose -f "docker-compose.github.yaml" down

      # bundle the frontend
      - name: Use Node.js 18.15.0
        uses: actions/setup-node@v3
        with:
          node-version: 18.15.0

      - run: npm ci
        working-directory: ./frontend
      - run: npm run build
        working-directory: ./frontend

      # store the frontend bundle as artifact
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-frontend-bundle
          path: |
            ./frontend/dist/
